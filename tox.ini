[tox]
# Specify which (tox) environments tox will configure and run on Travis
envlist = py{36,37,38,py3}, nightly, main-build, flake8, black, coveralls

[travis]
os =
	# Run all Python envs, as well as flake8, black, and coveralls on linux
  	linux: py{36, 38, py3}, nightly, flake8, black, coveralls
  	osx: py37
	windows: py38
python =
	# Only run the flake8, black, and coveralls envs under a matching Python 3.8 env (which is linux as configured in "os=linux:py{38}" above)
  	3.8: py38, flake8, black, coveralls 
  	3.7: py37
  	3.6: py36
  	nightly: nightly
  	pypy3: pypy3

[testenv]
# Declare defaults for all test virtual environments - which are just the {Py}tests
deps = 
  	pytest-cov
platform =
  	windows: windows
  	linux: linux
  	macOS: osx
commands =
  	pytest -v -rs --cov=src --color=yes --cov-report term --durations=10 tests
 
# Declare the main tox test environment to run the master build under
# Current master version
[testenv:main-build]
basepython = python3
# Install via setup.py as a wheel instead of the default Travis behaviour which installs the entire repo as a package
skip_install = true
deps = 	
	wheel
  	pytest-cov
	flake8-colors
platform = 
  	linux: linux
commands = 
	python setup.py -qq bdist_wheel

# Declare the tox environment which performs linting
# Runs auto PEP8 linter flake8
[testenv:linters]
basepython = python3
skip_install = true
deps = 
	flake8
	flake8-colors
commands =
	flake8 src/ tests/ 

# Declare the tox environment which runs formatters 
# Runs auto formatter black
[testenv:black]
basepython = python3
skip_install = true
deps = black
commands =
	black --check src/ tests/

# Declare and configure the tox environment that sends coverage report to coveralls.io
[testenv:coveralls]
basepython = python3
skip_install = true
deps = coveralls
passenv = COVERALLS_REPO_TOKEN
commands =
    	coveralls
	
# flake8 config
[flake8]
ignore = E501,E402,F401,F403,W391,W503
format = ${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s
  

# To Do, below:

# Twine to automagically release package on PyPI
#[testenv:release]
#basepython = python3
#skip_install = true
#deps =
#    {[testenv:build]deps}
#    twine >= 1.5.0
#commands =
#    {[testenv:build]commands}
#    twine upload --skip-existing dist/*
    
# Sphinx auto-generated docs to be added later
#[testenv:docs]
#changedir = docs
#deps =
#    sphinx
#    sphinx_rtd_theme
#commands =
#    sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html
